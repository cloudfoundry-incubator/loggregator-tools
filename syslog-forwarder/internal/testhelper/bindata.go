// Code generated by go-bindata.
// sources:
// test-certs/localhost.crt
// test-certs/localhost.key
// test-certs/loggregator-ca.crl
// test-certs/loggregator-ca.crt
// test-certs/loggregator-ca.key
// test-certs/non-signing-ca.crl
// test-certs/non-signing-ca.crt
// test-certs/non-signing-ca.key
// test-certs/syslog.crt
// test-certs/syslog.csr
// test-certs/syslog.key
// test-certs/test-server-name.csr
// DO NOT EDIT!

package testhelper

import (
	"fmt"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)
type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _localhostCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIELjCCAhagAwIBAgIQUEw9/I+s1kUpgg7pIgEtnDANBgkqhkiG9w0BAQsFADAY
MRYwFAYDVQQDEw1sb2dncmVnYXRvckNBMB4XDTE5MDQyNDE5NTkyMFoXDTQ0MDQy
NDE5NTkxN1owGzEZMBcGA1UEAxMQdGVzdC1zZXJ2ZXItbmFtZTCCASIwDQYJKoZI
hvcNAQEBBQADggEPADCCAQoCggEBALLW/dPNPzz7SjYD7psfyla6WoKTH/hQe8cu
DJgHIkJlQ3yY02CfE7pxfA9svc3UlHg7zXno5zs91BaZ1cCUrLjSMzCqlq8Y32zq
f0Km+jhlvNpKuZzY1KXmf1JJp5Cvgiq63M4Hu9nAXfEOSas4m+3XLlLJCS+uhuN/
JPSzT0IxWTEQWmoqMvEqAG69ihlb+tAFQgaNFYQDuYIWJx/2RMR03Afr6x8KOzar
bnE8NtWKXpl2uIJFPG198QG46fefRb3jjBfB9h2u5wpnqm/gZ8QhuwT5p+wWQiYC
jfrlcfIznrqfwOAN4+kIkIUmqsd2Ml9XVF1D5lzzniI9gGBWRI0CAwEAAaNxMG8w
DgYDVR0PAQH/BAQDAgO4MB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAd
BgNVHQ4EFgQUvhFzoUMjFWuejcCCLb4lJ2+I2EwwHwYDVR0jBBgwFoAURadQXWkP
fW5iWOtJcELN51LQpmEwDQYJKoZIhvcNAQELBQADggIBAD6fuSSzSDHEaJwckdQL
fUySEVkBQKSfvoh2TrHpUFkUMqL9gsGR+vT5SyTaTyl5fSGjWAoK786+YqirA1Zb
H/fhVkCauH8sN68FJaGQq0Yu1VbgmVT+NT2jRjgDjNN8R3hM/tCXYZ5/VXCIrUS4
IurQYGzNnQE944rBzn/6GimxK/xvQtoot+2geMC0VjIlp0QDAvJVXB1BkErvWj0u
Kn8vqho+xNYPLvFdajQuot51d0uAsgPkWWsiIk8iAT8XCodsIVSFUHQdDt1LI2Dp
h5a33xS3hT1CmWZGIvHPo5xUPDBhvxL3dsAAkoaDFzY3JByHm/zmelqIffO3j8WI
quR3DamuR7SQORbbeAOVPSXP2QMqQgNicZlwd9S7CQ/1ikoJNdO8gqQlvjbn+2tM
uMCVFQk3PJSTny9j6X0w+LlaNy35vpUVvUVStfkwRRR5xo6N8BVo5nWEt7aNwno6
cUsUPC7Za+CTsk0JTsm9bhcdx4y5jXFvblX8QSfQrq95Ff+nBacaTnz6Q5BFusRw
7UQg/TPW+6vYts62epDWt8it31lEdmHmO/le6PLoWJtXpNHlWyLteuH+B/bZsApa
6r8OULiUyp1MczbDYDf62ND+u7eY0lkgYhAS9DyxoGTfh4WHyAyvi0SS9HkGLRUq
CDhf+kh3COr6DSlzR+OPo5cC
-----END CERTIFICATE-----
`)

func localhostCrtBytes() ([]byte, error) {
	return _localhostCrt, nil
}

func localhostCrt() (*asset, error) {
	bytes, err := localhostCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "localhost.crt", size: 1509, mode: os.FileMode(292), modTime: time.Unix(1556135960, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _localhostKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEAstb9080/PPtKNgPumx/KVrpagpMf+FB7xy4MmAciQmVDfJjT
YJ8TunF8D2y9zdSUeDvNeejnOz3UFpnVwJSsuNIzMKqWrxjfbOp/Qqb6OGW82kq5
nNjUpeZ/UkmnkK+CKrrczge72cBd8Q5Jqzib7dcuUskJL66G438k9LNPQjFZMRBa
aioy8SoAbr2KGVv60AVCBo0VhAO5ghYnH/ZExHTcB+vrHwo7NqtucTw21YpemXa4
gkU8bX3xAbjp959FveOMF8H2Ha7nCmeqb+BnxCG7BPmn7BZCJgKN+uVx8jOeup/A
4A3j6QiQhSaqx3YyX1dUXUPmXPOeIj2AYFZEjQIDAQABAoIBAEjH487BdZ3sqlvn
J8CrpF29Qz5mf5k/r8/0dp2cMZ4RtfBMBaIJuy6iJpnkaC4O+EkiFVIqrYfXdqun
+WyBVPV2XezNT7t8hNi/agEHEUfIZ53y0Sz6tTe64U/st6vTMUcQevHCBfntJo4G
gYaT6ClX6/s2420rOqv0v2ZyXqwR2O+GFynnbfYXy6F29YeuzUw/hAfyVLqQwBSP
HhvUYHridxRLBWwkWTMGckhpnWhjvRFJTvBrUDPJ6MQExHJRJGGdtYNvNaGTScqN
YmQLUmJg3oa47CX/syoGDo5Ao1Ny1vhA35NaTC/LlZWR/X1BtizPHXfyldN8OXh2
r58MMuUCgYEAzc+34vQRVcJ7ELNsVnSWeKaRVTHQ9JzZIuNsj7yZ1qIP7EORO/se
xiisNhhJGuxTnIHLy1Frn/MeHdhiGRYTMFrkhgTAxOx6v6N2jLvR0pxNu/+sq6q0
rjiIEt01XppnOD4HbDzj6ShtxFBJrQYcZsbn3srnMD2XvUv7OChgWK8CgYEA3nOB
bRrKg2JJcfhvNN23Q7k9P+4K4JNDBRDpKj6pW9ZTwXdphDbq0gpweBoF89Zj0/vU
HvEw1f2rmWYVIR0Upy4DDcfIyoUOdRMAdug6LLVOgvb8MlCHac/2C7G966mEmZj1
vojnY9NaRfiIEsEZahbpR65U3LA307MeFef4DYMCgYEAmPsPiok04XRAGbfkjZb3
yhK18Ieo9EoqNH6r0WO1Tg8Emu/WYqlUxKKy7zq6DGMh+zGXlDefMjN6bWDL+i2o
ccb+Gogp6baFvzD4C8AIRO6d8WIorSmkR+QJcUwwQXOvyeSBi/jux/6fKM8tFIl4
TwUGkVps4jTGN5Tk1Wddxk0CgYEAjoy8Ort5XPpGEHfgY6NVBlwVSPt1Evarcvqk
QEMJamWNJKQuBODgV5sC+aPLfrc7H6P4CaAL6IV3SoTlM2QcUQmmQVVucYEUg6ea
m5gzd2T0G+7ELEX4kLEIffP3vaXS6E7h46h9hzXwWnhqUoJVk+t8sEeh8A4oqEvX
Erik95sCgYB5IENtFr1Saokv9DQrA/ZtJVoX45AM5Xlb3Es4iwOj3JxUFAAxjl+Y
I3LuBYobbNUbaJRzZP348wywszrDGrRjZUx+VS6QBofJcbWve2IH9LDFzljBy5Eq
rJyFetU/7/rGRXUjNvDqS3KTTQCVo2On/jefl0daHr3p+5ecT+DmQw==
-----END RSA PRIVATE KEY-----
`)

func localhostKeyBytes() ([]byte, error) {
	return _localhostKey, nil
}

func localhostKey() (*asset, error) {
	bytes, err := localhostKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "localhost.key", size: 1679, mode: os.FileMode(288), modTime: time.Unix(1556135960, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _loggregatorCaCrl = []byte(`-----BEGIN X509 CRL-----
MIIChzBxAgEBMA0GCSqGSIb3DQEBCwUAMBgxFjAUBgNVBAMTDWxvZ2dyZWdhdG9y
Q0EXDTE5MDQyNDE5NTkxOVoXDTQ0MDQyNDE5NTkxOFowAKAjMCEwHwYDVR0jBBgw
FoAURadQXWkPfW5iWOtJcELN51LQpmEwDQYJKoZIhvcNAQELBQADggIBAAgEMkNy
ZreeG/84k9usD4/yL8zYBDBiTVqEbj+rVIVD2i6VRuRJr9Fm3VJMiEoUAlB0tcD5
CQ7GYb8f18tMzEpBWYkGiSjy9f8t29OKiG/PO82gClwurBpSnktuThJrStelwd3A
edCQISZQGecKZ2ToVoqrxXnYzE5NJ3jgShtl44CT8aHPZ6uwS/K2KV78fnupGn2C
+bPHE+YZVzS7lvam93zYk87i+HAM/wuZZkIErEPpjEz0FwybHd3TfaSJuFglOQs4
+ZFZN43CGTfxekDF6UPRBaa5p+pwdSSQT8YWa97KyKNZVs7T7EFs3z5nJA+vMFG2
3HZErN7rmaPblYgnmgJB/XjfSkmGs2DnToSiFAsNNlNqP/UGFr1IwKKvGDjJ1Yfm
7x/8qa2McgdDSwykOPc4V1sQrJdfhfNZQrfWNmJh3LQiWSK1WTS0MpgnIVHZtd6/
/zFowSE3cIYS8RjlGjnzOODUzKRdnbwznnPuOJ+I3EKB8rCt3QmyvydRhAxwShlQ
6tuZAo/O4ioV3Y6+ERXtFKeVuGTiDEwCIXfIvaAFz4ZDlH5blHG2CVI/OA9v/Hq/
RpvMlr+hXYVFbk0Xvf1F8gpVGPq4V36mRcB7gi/wrzE1ERFalMlDAUSQC4QLh7Uu
7osCFEnsBw1iQchBbxCCiuatr6+mOUCCn0RK
-----END X509 CRL-----
`)

func loggregatorCaCrlBytes() ([]byte, error) {
	return _loggregatorCaCrl, nil
}

func loggregatorCaCrl() (*asset, error) {
	bytes, err := loggregatorCaCrlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "loggregator-ca.crl", size: 930, mode: os.FileMode(292), modTime: time.Unix(1556135959, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _loggregatorCaCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIE8DCCAtigAwIBAgIBATANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDEw1sb2dn
cmVnYXRvckNBMB4XDTE5MDQyNDE5NTkxOFoXDTQ0MDQyNDE5NTkxOFowGDEWMBQG
A1UEAxMNbG9nZ3JlZ2F0b3JDQTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoC
ggIBAMOMy+iY7WpPi6AIJ3K9e55r8CW68KBOlNGBKhPhVKAMLucG9X8SSZl14mZ4
ykU7LIgmr3lgtSO6FHUzoZY/ndmNTX05UmgJHY14TMM/SR5JOM4RAXJCkHXiCLR7
qivHLLZ2Nk1csU389jlldUxXiYkf7FEjiFBbJyfmengE+xTRdjP4XEfybNS0aR8y
unEBxSvANcChSSOVw86R5f2SD0BYrv7lHFgeXhvBXf/A2VWNLSujvlbOnUQFGJUB
zQ2Ag2XC6PbfVa9GJtlUTO2S4+SNQOzjKkS9uj4cklf4c+JpNGxdJ99UZApp1e3a
LnasX8IsypT0zWbd4QwsZ66eHHSygpCaeMFeYZuYyu9Gab3H+MzjD88KpynZ6IZg
PsHKpHwHnIMkRkWjfzdkmUA88gEEAkuicQDVy5Zvl+5XvRLA2AZsKl/P5R+a3tnH
KjFqdh5c7fhrM8kz/6mhoK5s+Jqi6e2SzaXkGV2onk5niyyzZ5aNTqwNhjdBjv3N
cGjxNnPQyXeHVmacUQzrlKulFyCcirvkJpjOHIBmKDIIZsVZCQrqUotJzTxWjCKD
WFJMaYvVA1OP5bfrnqYs8dQ1Qq/XBztHG6whc1+Hh8BA/nXH+hfoXktbo1FUMxLh
3vcbTKM5Se458SErCCaJcJ/qcHOm9efCXVlDhDduUhRAlaK9AgMBAAGjRTBDMA4G
A1UdDwEB/wQEAwIBBjASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBRFp1Bd
aQ99bmJY60lwQs3nUtCmYTANBgkqhkiG9w0BAQsFAAOCAgEAVxhjcekC/BEfJhlN
R0uHRe5f50zYUxmaiflbvOe5rDX8dpyOTFy0kCnjnlbo5WioWqwngU15IRevGjzK
HLz+6oF250ZpEKOYV0gLT6BSIfhcB/8ZI4fFLEa6rpo6XoqknA8hBrxmOPsWyrjP
RPK/520Iyc4xASvvEJ0Fswn6IeYRtpXV0KO7vj8mDoU+S/bYQivTdC04Lhshw1Ev
NSoUuQ8TcMxTfHcnEIQYIIRh4icjlFo70M4qDogZaIGnMvRPRGAE8DmAZIPZpecf
zt64bLQ08Z63s3yOneadkhptSJHy9mC7Fi/AWZVn9nOxvzjGK2NuZFfQdn1Vbdr7
0CUd+0aujOpENJdZeUL3P6Gk8s45LOk7mxWA+M4qxVbKbtEOQGfyySxPSmjAl5ps
dyLZ1ZU/1FzuRhN0R7h/B7moe0rBf4S2k6Rgy9A2MKpvHh0Nc5Ddma1azVmaAIML
B2bVP/g9YfG8v6aCiYQKkQsmLVzBiTfuGbsQWZ3fNjLIWe6Mb5X1F0U2w9Cv1+Vp
WhQo4E/Rnuiii85Vp026Y4/YasX8K1PyRljj207uodH64YraWD8W+a10VJoNczMr
fRrezw3O/m5wj5ntOzw8LGSFXc5AdDVzm0KQmJqoqWP84cDk+hBWDhKNjsf3jo8E
uI95aFU8gR+BMW22Nz6ujZwq47M=
-----END CERTIFICATE-----
`)

func loggregatorCaCrtBytes() ([]byte, error) {
	return _loggregatorCaCrt, nil
}

func loggregatorCaCrt() (*asset, error) {
	bytes, err := loggregatorCaCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "loggregator-ca.crt", size: 1773, mode: os.FileMode(292), modTime: time.Unix(1556135959, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _loggregatorCaKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
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
-----END RSA PRIVATE KEY-----
`)

func loggregatorCaKeyBytes() ([]byte, error) {
	return _loggregatorCaKey, nil
}

func loggregatorCaKey() (*asset, error) {
	bytes, err := loggregatorCaKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "loggregator-ca.key", size: 3243, mode: os.FileMode(288), modTime: time.Unix(1556135959, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nonSigningCaCrl = []byte(`-----BEGIN X509 CRL-----
MIIChjBwAgEBMA0GCSqGSIb3DQEBCwUAMBcxFTATBgNVBAMTDG5vblNpZ25pbmdD
QRcNMTkwNDI0MTk1OTIyWhcNNDQwNDI0MTk1OTIwWjAAoCMwITAfBgNVHSMEGDAW
gBRDC/mpm6suEuqREEhjtmlA1eonmzANBgkqhkiG9w0BAQsFAAOCAgEAKpGNrJrg
2wLzyAgSf3yObNchpD0VOiKRSg607a5FdMh+PGWRxZfb2YF3nCmoifRphdgVTNsA
XTaqRfWLx04GuyPtSJ0WvSy8iU/ysLXCVpPF5/d8afjmFaEKEejzM+v3GG5soBPu
hG47hwrtfdcUJQPwtxFyJ4YXa3HdnAvpQazViDDQm399uTg4nSb8zACiXO6pWCKk
XcexJYgbiXY6flXmvoUf3Hc8B0+yPbm/kFw5KGJ0GILnB7C6TDhoz+cp64kJpkOm
wEVy4mDXBRqM7WuAEhonBQhIg4kPG32ms4gD1kZtHwUysQa3CfuTBlLrwkghWYFv
C/w82V4Mx2C8shUtTheEHYVIWZGmckb/EceFVcbgOU8DKgb5WrlQRV7D08SZX5wl
M7fKT5UHbs6SSFEecrZH6wUk8Zn8khvEiPgLfovK1Y9mXILG7vN80lL9YOM55pgz
XBiMuQ99vbe4O0YYwejII++p/3LPyjadDlxJNuMFRMhrHWODrp0UkDhA5WCINbLV
RkPGyBnpSQIYsf+0Z3irig0bmAL6B/VjQDm2EiONLk/HKauuX+bFS4/RpdVCXpcq
JR0eRRaBFbsm9L+J2TI0EiB0WMkncXQlqeD6DFgiRpr7Rh2ZN+5hoMQFAliEW4dW
g3PRSkZJda+34CMeNP/Ou5UIVBg0Xl4amxI=
-----END X509 CRL-----
`)

func nonSigningCaCrlBytes() ([]byte, error) {
	return _nonSigningCaCrl, nil
}

func nonSigningCaCrl() (*asset, error) {
	bytes, err := nonSigningCaCrlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "non-signing-ca.crl", size: 930, mode: os.FileMode(292), modTime: time.Unix(1556135962, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nonSigningCaCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIE7jCCAtagAwIBAgIBATANBgkqhkiG9w0BAQsFADAXMRUwEwYDVQQDEwxub25T
aWduaW5nQ0EwHhcNMTkwNDI0MTk1OTIwWhcNNDQwNDI0MTk1OTIwWjAXMRUwEwYD
VQQDEwxub25TaWduaW5nQ0EwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoIC
AQDIJkDdcrPQaBSIBFsRdA+/Sjdfla2OXeHge25liZ1iNwjgsDZqpXs0t92MHBGT
vyxiH2FyCxBZhfsmEjbc1HEbj56yDAfJOohm+JU+waNhgEN9Xeg8Y3A1p40CYGkH
/DFa4xAO8nhBbXKngg1DgeNdV58Gu9wcl2F05iTV6h7ZHjhCeOEbvbpqfLxlh8uQ
jjMURAY4Y7yPScyQgpYx1zOjWT2tr9pdH2EpyBRiOQRbVBD0DbOLvGODi2afOgYH
xIxlqVXVS1k6omk9BTsUjPZbRkDjgzlGNblFEwjhWJjVnYt8OVLt2QllYFkuu1KE
qjsq7nVpA+lRL7zx+MydMRQFQRwbKI66LGTpTVAomE+RsfeG/wZsVMhcGSk4pOlf
lCfiDugiUbAU3pKVNneO0lOBfktaQETsXYG5uyI3007IQSYlgh2QQHdsEezL0Q6Y
grjqt1mkJKhNmhLHeRti9nxgQG04OwbdDAse2RVp1HzU/9hhkVoHc/tjiyK+epzp
Qn0RmRTRzndyUbmilnNQ2tkxgJXk/SIdKVXyEGxzS8mRwUbJ88J/G6HSSfx597CK
xKgNWVfziCLgqkKdcUGbXavPgp3UsMPe896Gnsq23AeGYphRQlvGBte5ErlVtFqt
nzsu2WFiDHLK+kxOzGyshmJ78kPWRYIhLDHumSpEw3I32wIDAQABo0UwQzAOBgNV
HQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQUQwv5qZur
LhLqkRBIY7ZpQNXqJ5swDQYJKoZIhvcNAQELBQADggIBAFTJ/T7Nsh/yR173U6kd
RPUVvy5z8JCDMo+eEWtl6tlxKQIwh5XcN+K2UVDPoJrNybC51BmlcmgcNmFuJcF4
dGuImbF/QKb3NLfTE+Wq0usHmoeEZoOqkwPcNRxtsmtASZUlJE7zu+WypHG1mC7g
m+LoCfDp3gSRxBkap6aC1v2gcWguMvKZV+yEyjs70n9lLMlEcq+bhWZ71HZo2uZj
CXs/cDkO1JFv5r9PpgyoM/dqf4epUpopQFlHFOmAG2c+nzRer45/Pi80irGO7Doe
wyVdvDeKDRmv1ioesVHLUg4J+YxWMQHf49W62z0BMRqPvLimd/8EOYWm4qkv5vQX
tQHAKqQ2upxFPC9kJ1aPRs75d8MSe59CvfCvBEsPjwcncfpDgZuX2lx2UTaJiX9K
cbiHj5Et2D0nnJquHTED/6qxeiFszVRqZ1TiDQtC2+tldUHqwN96Anzsskqs159s
Vbp885lkQgKjzuGESzg7KWcTk5/U76/a/G3THpYMOITTJc4Y3JXlN7gVFHGfoZrA
dAzVdAQBRFPMO11O2Hj16f6FqySpvRqFwxPrvKdg1PEkJWWw289TpN2/48TeFtip
hNViwgUoFmqi1nYsM6DkNmn/+sqzOtojh6exKkX65VSoOqhEgYUxETLdb6mGlaFO
nzJMm/dsaIrfoxTiMHeODI9w
-----END CERTIFICATE-----
`)

func nonSigningCaCrtBytes() ([]byte, error) {
	return _nonSigningCaCrt, nil
}

func nonSigningCaCrt() (*asset, error) {
	bytes, err := nonSigningCaCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "non-signing-ca.crt", size: 1769, mode: os.FileMode(292), modTime: time.Unix(1556135962, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nonSigningCaKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
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
-----END RSA PRIVATE KEY-----
`)

func nonSigningCaKeyBytes() ([]byte, error) {
	return _nonSigningCaKey, nil
}

func nonSigningCaKey() (*asset, error) {
	bytes, err := nonSigningCaKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "non-signing-ca.key", size: 3247, mode: os.FileMode(288), modTime: time.Unix(1556135962, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _syslogCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIEJTCCAg2gAwIBAgIRAJac+QfYKvpHqpP/WKFnraowDQYJKoZIhvcNAQELBQAw
GDEWMBQGA1UEAxMNbG9nZ3JlZ2F0b3JDQTAeFw0xOTA0MjQxOTU5MjBaFw00NDA0
MjQxOTU5MThaMBExDzANBgNVBAMTBnN5c2xvZzCCASIwDQYJKoZIhvcNAQEBBQAD
ggEPADCCAQoCggEBAMC6EAw7ZsA9BTOod2y9QQbPBVo9gm6FF2Zv7WNP9WZvpPZt
+TpFqPVGzVr2/ExwLG0zDgXku7JS83g3JvEpkcelgbturJw6Z2ssLaXQYBGp9c+t
sOXScJSjd7LLlOrhMqJEnmaLlQU3Q7IiG8W5iJkx3xmqQaqjVvstcN5vFTUWNyxB
063RZk4STg2kYe6k75c4hVrkXJLm0WNgdf0rIFG88USlriG7KFF1/ahYoAfdIrGR
ZVdTnufQLheNECta1x0PeJlq4fEBs2p6R8YEf2DgR0xS9enQmk+RLxPJNfMCPfwy
WYwD/rE8WilYe1QUq0rqPndUoq/j6wRwc4nT970CAwEAAaNxMG8wDgYDVR0PAQH/
BAQDAgO4MB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNVHQ4EFgQU
rUKIlOIgHtwIe4iqt/2NGPjBzM4wHwYDVR0jBBgwFoAURadQXWkPfW5iWOtJcELN
51LQpmEwDQYJKoZIhvcNAQELBQADggIBACQ6ZU+w3z1kGdb3dDXNmSjTNxpOzNtp
qL0asSbUGqvp/eCkIzHv9iMOsXr+Ww2RUw6RSqOX4sI38uhdBFU4v8wDriEr/i/n
CSVJdKEgJ9PUoTAnXPA6kp4OtdERlCJLAEQef+xMPFZVia1lByXsYOIzMZrJH4qb
F4FkfAA65tKpWHmgjtDLHXaa9mh54RmvXGAKdvamDt/9WRrMo9OP+AFJORFQJG+6
7ino+upzCfH2ppUwq2+Gq9+7oDDyF5iOeWZR4yZCSmWis9iHYlA93Z3mWAAn8X5p
ZvrVNh5VHz/xhgxtGBJcNuYkmZjbpk5Ja+OZSz9FKUVtglFrsfZ4sRyZXWcugutm
7aRZ8ih4BjS2CM29eGHwj09Btkf/Oq9gsaqHIRXaCiRY16W9NsIcEQO+2Te0t7cm
1QZCBVHQ9IHwrQKb4srXqYxZwVoqEnmq75UKlYmyZqAMHUkksKnYp5D6lOlb4Vw6
KeViaRoKFqmoc435yIICykac533U6x7pOTEJPFpWYtxnS1CDw8eFSa1XD3XLdZ8Z
+d2+OAqmglrRKTduPo8ZIHPdnbDOjd4lSthkKIIe+/6dO2w1NtPFwnpPR7mdWIQ+
wiwBm8dlHrIdcBLtoHe2p8mR4IiC0Ce7IGNgkBwQLhmRwTjgrr9GUr6o2zFZd3gi
wTn9Kcu/WoiW
-----END CERTIFICATE-----
`)

func syslogCrtBytes() ([]byte, error) {
	return _syslogCrt, nil
}

func syslogCrt() (*asset, error) {
	bytes, err := syslogCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "syslog.crt", size: 1497, mode: os.FileMode(292), modTime: time.Unix(1556135960, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _syslogCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICVjCCAT4CAQAwETEPMA0GA1UEAxMGc3lzbG9nMIIBIjANBgkqhkiG9w0BAQEF
AAOCAQ8AMIIBCgKCAQEAwLoQDDtmwD0FM6h3bL1BBs8FWj2CboUXZm/tY0/1Zm+k
9m35OkWo9UbNWvb8THAsbTMOBeS7slLzeDcm8SmRx6WBu26snDpnaywtpdBgEan1
z62w5dJwlKN3ssuU6uEyokSeZouVBTdDsiIbxbmImTHfGapBqqNW+y1w3m8VNRY3
LEHTrdFmThJODaRh7qTvlziFWuRckubRY2B1/SsgUbzxRKWuIbsoUXX9qFigB90i
sZFlV1Oe59AuF40QK1rXHQ94mWrh8QGzanpHxgR/YOBHTFL16dCaT5EvE8k18wI9
/DJZjAP+sTxaKVh7VBSrSuo+d1Sir+PrBHBzidP3vQIDAQABoAAwDQYJKoZIhvcN
AQELBQADggEBAJwTm6gqHfJ819ntS2Q6FkC90hDOrNADpC4S2RlRk2BJsHEsGPLk
jplOo3oRzGD3zgofBK5AX96SLQRKSUXPJekTvFX7mTp/M5MsRG95oSvtM4Fo4+Ij
rpxv/GHvlB9qDddfqsj9rlYjol9TloLJJU/OrHlEQXrkLxpWkXcEwdCBQRzfpGqy
bqwbKJeaEP6FugCv+LanqnljbcUdkxw7pRi0X2oesu+UzWEHfknV16QbkSKT0aE1
8X3ncYLz2rp0pfjmnkddifefBHLKgBZjU5OKWkxe5fHzDrdOZFHe+zabwTMW3dCn
49CyoPYXqmcAZsdhoJXwTNDgPcmlnvCCLXs=
-----END CERTIFICATE REQUEST-----
`)

func syslogCsrBytes() ([]byte, error) {
	return _syslogCsr, nil
}

func syslogCsr() (*asset, error) {
	bytes, err := syslogCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "syslog.csr", size: 887, mode: os.FileMode(292), modTime: time.Unix(1556135960, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _syslogKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEAwLoQDDtmwD0FM6h3bL1BBs8FWj2CboUXZm/tY0/1Zm+k9m35
OkWo9UbNWvb8THAsbTMOBeS7slLzeDcm8SmRx6WBu26snDpnaywtpdBgEan1z62w
5dJwlKN3ssuU6uEyokSeZouVBTdDsiIbxbmImTHfGapBqqNW+y1w3m8VNRY3LEHT
rdFmThJODaRh7qTvlziFWuRckubRY2B1/SsgUbzxRKWuIbsoUXX9qFigB90isZFl
V1Oe59AuF40QK1rXHQ94mWrh8QGzanpHxgR/YOBHTFL16dCaT5EvE8k18wI9/DJZ
jAP+sTxaKVh7VBSrSuo+d1Sir+PrBHBzidP3vQIDAQABAoIBAB9c6AmljQYRqAwN
CUo3ziI2hE94HQaxP+qaok38EBpYZsb3hIxYE7O+juKTuOETjBdFLK4G2Aif+SEC
EKNEOYX8yAzhaNOPqY7GRLNsIoYdW3QtdtEfmtSFeZAuExDaDuxbME/NvTV5Fdoi
NNTLaZBMjlrV2xPSuu/rKCf6ecAGkikxi5X6CCuw23YvzoHSoxHjj2ffOqlB6JBb
9CWa5AtTE3dEIJFsVrPiIf5HBEaW6BAkYyk1dDBhWF0g7XcFEe7klPPoLiZqFN1Q
Q3NPQC9sWI3WG1F0vTo7mw4pGYa8fGCoAzKzT9yyikfPrTnuLANo+W5k2QBY7tKM
Vwusxz0CgYEA45m8v54KDU4cQGGoqA/b+PiLT2v/3E47sXVYDZ0pgwHxcLqO33F2
urHNv7Ssc7rXZZMLq4E2uAXAuRsy/OHI7rV6v3EX8/vgRShk160rqij0zu0rnTGI
s/qbNEZrOX9TT9608w2CAmEyAoq/r1cylW3yD17ti7LA60mJZ1iSVvcCgYEA2MZZ
2lgWUQNknGvKdCXz4nfSyyFPKTHoaRxfJSavN9GUkAN8Xwis47d/MtQJDeXHJTLF
Tfkkw/xOwtGL0iR4qDIKTB7pSaM5Z1wNf5DTLhy192Upq9TR56cbDv63ElK/+FZe
jx2LW4kKJphtziIzDSjq6ehdT4+b8yP8r0wrNesCgYEApU0NBuZTSqKGZkQHaDhM
fSCWnVJE+85eEF63WvvgIGQS5Nq51ZLktmdYlXk1HsB+nCkV+rPX+ANFm6sjdwLN
GoH36n7K9MrkcZYK15HP+r/QPVGHsZ0+OekzO95BFfthmMqZBUW0POI2nh4DZeeg
t2KowX0ibamf78Ly5novnrUCgYBuIrCqJ5EHDhNDCdztkA7OJBTcEYtXoby0Eq8g
f/wL/xZc6Ph6jDzS4XrlxybmgbThaF8oU4njbUBS6QYB+Xe39NyYeigKurxCkFln
U5yH1Bx7mlFGtTUEXjl4L9+xlotkT/Vw/xC7q++VVmKLlYKckApyVxV5g7w3FzSd
l7RoiwKBgQDcE37UAQGGlhByv3wNXiirvW3Cd8xxxI7ueBSbLX3uwFToTIIfoZ6u
MHlexb5iWRaXtGSjs7UCmMV33j77mPTBwJGm8PgQvTnvHgaq7mYtK92YKZFXlxt6
bsnp92S1U3IwKLo2IIRiiq1occ35iQNM8t1VvlqxjMxPvTtnjZW1tQ==
-----END RSA PRIVATE KEY-----
`)

func syslogKeyBytes() ([]byte, error) {
	return _syslogKey, nil
}

func syslogKey() (*asset, error) {
	bytes, err := syslogKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "syslog.key", size: 1679, mode: os.FileMode(288), modTime: time.Unix(1556135960, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testServerNameCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICYDCCAUgCAQAwGzEZMBcGA1UEAxMQdGVzdC1zZXJ2ZXItbmFtZTCCASIwDQYJ
KoZIhvcNAQEBBQADggEPADCCAQoCggEBALLW/dPNPzz7SjYD7psfyla6WoKTH/hQ
e8cuDJgHIkJlQ3yY02CfE7pxfA9svc3UlHg7zXno5zs91BaZ1cCUrLjSMzCqlq8Y
32zqf0Km+jhlvNpKuZzY1KXmf1JJp5Cvgiq63M4Hu9nAXfEOSas4m+3XLlLJCS+u
huN/JPSzT0IxWTEQWmoqMvEqAG69ihlb+tAFQgaNFYQDuYIWJx/2RMR03Afr6x8K
OzarbnE8NtWKXpl2uIJFPG198QG46fefRb3jjBfB9h2u5wpnqm/gZ8QhuwT5p+wW
QiYCjfrlcfIznrqfwOAN4+kIkIUmqsd2Ml9XVF1D5lzzniI9gGBWRI0CAwEAAaAA
MA0GCSqGSIb3DQEBCwUAA4IBAQBNtn9Dpb0lLWOYQedDkBAiFYFuk5vnSCguehZj
zMju6OrNH71p0tK1O7LMKPaMZMwQ8k5NkoUjzva4cXgWK7Whn1zR9YcANoqt4Zrn
bMQKOqpkWCzBv0OO9bAC/zO484i6RgDGEWmLt0dhdnudmAaXqUOAwHA4y/PMABJU
rE3nar7fjymCjOdXK67lTO8GCMmqGtiwwWPQYgCzBzk+0O0ev5SpjgKonYgNupoV
3Mx5MgBN16oR3dEEyQ8cWblfbPfH3tOFX1t0T79erZdNkeF51g7sq4yU/fyXtlMm
tY6KfIk0YehUNrioKio8q0DQeE5JsyETaZkqLWvsf1TsHkOr
-----END CERTIFICATE REQUEST-----
`)

func testServerNameCsrBytes() ([]byte, error) {
	return _testServerNameCsr, nil
}

func testServerNameCsr() (*asset, error) {
	bytes, err := testServerNameCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "test-server-name.csr", size: 899, mode: os.FileMode(292), modTime: time.Unix(1556135960, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"localhost.crt": localhostCrt,
	"localhost.key": localhostKey,
	"loggregator-ca.crl": loggregatorCaCrl,
	"loggregator-ca.crt": loggregatorCaCrt,
	"loggregator-ca.key": loggregatorCaKey,
	"non-signing-ca.crl": nonSigningCaCrl,
	"non-signing-ca.crt": nonSigningCaCrt,
	"non-signing-ca.key": nonSigningCaKey,
	"syslog.crt": syslogCrt,
	"syslog.csr": syslogCsr,
	"syslog.key": syslogKey,
	"test-server-name.csr": testServerNameCsr,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"localhost.crt": &bintree{localhostCrt, map[string]*bintree{}},
	"localhost.key": &bintree{localhostKey, map[string]*bintree{}},
	"loggregator-ca.crl": &bintree{loggregatorCaCrl, map[string]*bintree{}},
	"loggregator-ca.crt": &bintree{loggregatorCaCrt, map[string]*bintree{}},
	"loggregator-ca.key": &bintree{loggregatorCaKey, map[string]*bintree{}},
	"non-signing-ca.crl": &bintree{nonSigningCaCrl, map[string]*bintree{}},
	"non-signing-ca.crt": &bintree{nonSigningCaCrt, map[string]*bintree{}},
	"non-signing-ca.key": &bintree{nonSigningCaKey, map[string]*bintree{}},
	"syslog.crt": &bintree{syslogCrt, map[string]*bintree{}},
	"syslog.csr": &bintree{syslogCsr, map[string]*bintree{}},
	"syslog.key": &bintree{syslogKey, map[string]*bintree{}},
	"test-server-name.csr": &bintree{testServerNameCsr, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

